import React from 'react'
import { useEffect } from 'react'
import { useState } from 'react'
import axios from 'axios'
import './MCQs.css'
import { TextareaAutosize } from '@mui/base';
import { styled } from '@mui/system';
import Button from '@mui/material/Button';

const blue = {
  100: '#DAECFF',
  200: '#b6daff',
  400: '#3399FF',
  500: '#007FFF',
  600: '#0072E5',
  900: '#003A75',
};

const grey = {
  50: '#f6f8fa',
  100: '#eaeef2',
  200: '#d0d7de',
  300: '#afb8c1',
  400: '#8c959f',
  500: '#6e7781',
  600: '#57606a',
  700: '#424a53',
  800: '#32383f',
  900: '#24292f',
};

const StyledTextarea = styled(TextareaAutosize)(
  ({ theme }) => `
    width: 320px;
    font-family: IBM Plex Sans, sans-serif;
    font-size: 0.875rem;
    font-weight: 400;
    line-height: 1.5;
    padding: 12px;
    border-radius: 12px 12px 0 12px;
    color: ${theme.palette.mode === 'dark' ? grey[300] : grey[900]};
    background: ${theme.palette.mode === 'dark' ? grey[900] : '#fff'};
    border: 1px solid ${theme.palette.mode === 'dark' ? grey[700] : grey[200]};
    box-shadow: 0px 2px 2px ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};
  
    &:hover {
      border-color: ${blue[400]};
    }
  
    &:focus {
      border-color: ${blue[400]};
      box-shadow: 0 0 0 3px ${theme.palette.mode === 'dark' ? blue[500] : blue[200]};
    }
  
    // firefox
    &:focus-visible {
      outline: 0;
    }
  `,
);

const MCQs = () => {
  const [context, setContext] = useState('')
  const [mcqs, setMcqs] = useState([])
  const [generateButton, setGenerateButton] = useState(false)
  const [mcqsGenerated, setMcqsGenerated] = useState(false)

  const handleContext = (e) => {
    setContext(e.target.value)
  }

  useEffect(() => {
    if (generateButton) {
      console.log(context)
      axios.post('http://127.0.0.1:8000/qanda/', {
        context: context
      })
        .then((res) => {
          console.log(res)
          setMcqs(res.data)
          setGenerateButton(false)
        })
        .catch((err) => {
          console.log(err)
        })
    }
  }, [generateButton])

  useEffect(() => {
    setMcqsGenerated(true)
  }, [mcqs])

  const handleSubmit = async () => {
    console.log('done')
    setGenerateButton(true)
    setMcqsGenerated(false)
  }


  return (
    <div className="container">
      <div className="left-section">
        <h2 style={{marginLeft:'20px'}}>MCQ generation</h2>
        <div style={{display:'flex', alignItems:'center'}}>
          <StyledTextarea
            aria-label="context"
            minRows={3}
            maxRows={5}
            placeholder="Please type or past your context here..."
            onChange={handleContext}
          />
        </div>
        <div style={{paddingTop:'10px', display:'flex', alignItems:'center'}}>
            <Button variant="contained"
              onClick={handleSubmit}>Submit
            </Button>
          </div>
      </div>
      <div className="right-section">
        {mcqsGenerated && (
          <div>
            {mcqs.map((mcq, index) => (
              <p key={index}>{mcq.question} : {mcq.answer}</p>
            ))}
          </div>
        )}

      </div>

    </div>
  )
}

export default MCQs
